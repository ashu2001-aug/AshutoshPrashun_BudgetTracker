[{"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\index.js":"1","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\App.js":"2","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\context\\context.js":"3","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\styles.js":"4","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\context\\contextReducer.js":"5","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\index.js":"6","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\InfoCard.jsx":"7","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Details\\Details.jsx":"8","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Snackbar\\Snackbar.jsx":"9","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Main\\Main.jsx":"10","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Main\\styles.js":"11","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Snackbar\\styles.js":"12","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Main\\List\\List.jsx":"13","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Main\\Form\\Form.jsx":"14","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Main\\Form\\styles.js":"15","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\constants\\categories.js":"16","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\utils\\formatDate.js":"17","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Main\\List\\styles.js":"18","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\useTransactions.js":"19","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Details\\styles.js":"20","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\context\\context.js":"21","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\styles.js":"22","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\context\\contextReducer.js":"23","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\index.js":"24","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\InfoCard.jsx":"25","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Snackbar\\Snackbar.jsx":"26","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Main\\Main.jsx":"27","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Details\\Details.jsx":"28","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\useTransactions.js":"29","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Main\\List\\List.jsx":"30","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Main\\styles.js":"31","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Main\\Form\\Form.jsx":"32","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\constants\\categories.js":"33","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Main\\Form\\styles.js":"34","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Main\\List\\styles.js":"35","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Snackbar\\styles.js":"36","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\utils\\formatDate.js":"37","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\index.js":"38","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\App.js":"39","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Details\\styles.js":"40","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\Front.js":"41"},{"size":431,"mtime":1644582640363,"results":"42","hashOfConfig":"43"},{"size":1440,"mtime":1644582640300,"results":"44","hashOfConfig":"43"},{"size":2032,"mtime":1644582640812,"results":"45","hashOfConfig":"43"},{"size":582,"mtime":1644582640388,"results":"46","hashOfConfig":"43"},{"size":583,"mtime":1644582640831,"results":"47","hashOfConfig":"43"},{"size":216,"mtime":1644582640498,"results":"48","hashOfConfig":"43"},{"size":460,"mtime":1644582640472,"results":"49","hashOfConfig":"43"},{"size":725,"mtime":1644582640525,"results":"50","hashOfConfig":"43"},{"size":797,"mtime":1644582640733,"results":"51","hashOfConfig":"43"},{"size":1271,"mtime":1644582640583,"results":"52","hashOfConfig":"43"},{"size":514,"mtime":1644582640603,"results":"53","hashOfConfig":"43"},{"size":206,"mtime":1644582640755,"results":"54","hashOfConfig":"43"},{"size":1403,"mtime":1644582640685,"results":"55","hashOfConfig":"43"},{"size":4946,"mtime":1644582640622,"results":"56","hashOfConfig":"43"},{"size":247,"mtime":1644582640657,"results":"57","hashOfConfig":"43"},{"size":1693,"mtime":1644582640774,"results":"58","hashOfConfig":"43"},{"size":301,"mtime":1644582640878,"results":"59","hashOfConfig":"43"},{"size":416,"mtime":1644582640706,"results":"60","hashOfConfig":"43"},{"size":1124,"mtime":1644582640407,"results":"61","hashOfConfig":"43"},{"size":247,"mtime":1644582640546,"results":"62","hashOfConfig":"43"},{"size":979,"mtime":1645011086314,"results":"63","hashOfConfig":"64"},{"size":582,"mtime":1644582640388,"results":"65","hashOfConfig":"64"},{"size":583,"mtime":1644582640831,"results":"66","hashOfConfig":"64"},{"size":216,"mtime":1644932494283,"results":"67","hashOfConfig":"64"},{"size":464,"mtime":1645006743226,"results":"68","hashOfConfig":"64"},{"size":797,"mtime":1644582640733,"results":"69","hashOfConfig":"64"},{"size":2900,"mtime":1645043211126,"results":"70","hashOfConfig":"64"},{"size":2083,"mtime":1645026809294,"results":"71","hashOfConfig":"64"},{"size":1124,"mtime":1644582640407,"results":"72","hashOfConfig":"64"},{"size":1563,"mtime":1645042920840,"results":"73","hashOfConfig":"64"},{"size":514,"mtime":1644582640603,"results":"74","hashOfConfig":"64"},{"size":5039,"mtime":1645043440401,"results":"75","hashOfConfig":"64"},{"size":1693,"mtime":1644582640774,"results":"76","hashOfConfig":"64"},{"size":247,"mtime":1644582640657,"results":"77","hashOfConfig":"64"},{"size":416,"mtime":1644582640706,"results":"78","hashOfConfig":"64"},{"size":206,"mtime":1644582640755,"results":"79","hashOfConfig":"64"},{"size":301,"mtime":1644582640878,"results":"80","hashOfConfig":"64"},{"size":431,"mtime":1645018035737,"results":"81","hashOfConfig":"64"},{"size":1057,"mtime":1645043390155,"results":"82","hashOfConfig":"64"},{"size":258,"mtime":1644987346493,"results":"83","hashOfConfig":"64"},{"size":1444,"mtime":1644985053606,"results":"84","hashOfConfig":"64"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mix5t9",{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"1157g8n",{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"130"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\index.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\App.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\context\\context.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\styles.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\context\\contextReducer.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\index.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\InfoCard.jsx",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Snackbar\\Snackbar.jsx",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Main\\Main.jsx",["174","175","176"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider } from '@material-ui/core';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport { ExpenseTrackerContext } from '../../context/context';\r\nimport useStyles from './styles';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport InfoCard from '../InfoCard';\r\n\r\nconst ExpenseTracker = () => {\r\n  const classes = useStyles();\r\n  const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\" />\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">Total Balance ${balance}</Typography>\r\n        <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n          <InfoCard />\r\n        </Typography>\r\n        <Divider className={classes.divider} />\r\n        <Form />\r\n      </CardContent>\r\n      <CardContent className={classes.cartContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <List />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseTracker;\r\n","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Main\\styles.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Snackbar\\styles.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Main\\Form\\Form.jsx",["177"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\constants\\categories.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\utils\\formatDate.js",["178"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Main\\List\\styles.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\useTransactions.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\sample\\speechly_expense_tracker_project-main\\src\\components\\Details\\styles.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\context\\context.js",[],["179","180"],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\styles.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\context\\contextReducer.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\index.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\InfoCard.jsx",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Snackbar\\Snackbar.jsx",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Main\\Main.jsx",["181","182","183"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider, styled, CardActionArea } from '@material-ui/core';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport { ExpenseTrackerContext } from '../../context/context';\r\nimport useStyles from './styles';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport InfoCard from '../InfoCard';\r\nimport { motion, useMotionValue, useTransform } from \"framer-motion/dist/framer-motion\";\r\n\r\nconst CardContainer = styled(motion.div)`\r\n  width: 285px;\r\n  height: 500px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 25px;\r\n  box-shadow: 0 2px 7px 1px rgba(31, 31, 31, 0.2);\r\n  position: relative;\r\n  cursor: grab;\r\n`;\r\n\r\nexport default function ExpenseTracker (){\r\n\r\n  const classes = useStyles();\r\n  const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n  const x = useMotionValue(0);\r\n  const y = useMotionValue(0);\r\n  const rotateX = useTransform(y, [-100, 100], [30, -30]);\r\n  const rotateY = useTransform(x, [-100, 100], [-30, 30]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContainer\r\n         style={{ x, y, rotateX, rotateY, z: 100 }}\r\n         drag\r\n         dragElastic={0.16}\r\n         dragConstraints={{ top: 0, left: 0, right: 0, bottom: 0 }}\r\n         whileTap={{ cursor: \"grabbing\" }}\r\n      >\r\n      <CardHeader title=\"Budget Tracker\" />\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">Total Balance ₹{balance}</Typography>\r\n        <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n          <InfoCard />\r\n        </Typography>\r\n        <Divider className={classes.divider} />\r\n        <Form />\r\n      </CardContent>\r\n      <CardActionArea>\r\n      <CardContent className={classes.cartContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <List />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      </CardActionArea>\r\n      </CardContainer>\r\n    </Card>\r\n  );\r\n\r\n}\r\n\r\n/*const ExpenseTracker = () => {\r\n  const classes = useStyles();\r\n  const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title=\"Budget Tracker\" />\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">Total Balance ${balance}</Typography>\r\n        <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n          <InfoCard />\r\n        </Typography>\r\n        <Divider className={classes.divider} />\r\n        <Form />\r\n      </CardContent>\r\n      <CardContent className={classes.cartContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <List />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseTracker;*/\r\n","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Details\\Details.jsx",["184","185"],"import React from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, styled, CardActionArea } from '@material-ui/core';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport Aos from 'aos';\r\nimport useStyles from './styles';\r\nimport useTransactions from '../../useTransactions';\r\nimport { motion, useMotionValue, useTransform } from \"framer-motion/dist/framer-motion\";\r\n\r\nconst CardContainer = styled(motion.div)`\r\n  width: 285px;\r\n  height: 500px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 25px;\r\n  box-shadow: 0 2px 7px 1px rgba(31, 31, 31, 0.2);\r\n  background-color: #FFFF00;\r\n  position: relative;\r\n  cursor: grab;\r\n`;\r\nconst Dnute = styled(motion.div)`\r\nwidth: auto;\r\nheight: 190px;\r\nz-index: 99;\r\nuser-select: none;\r\nmargin-right: 3em;\r\nmargin-top: 4em;\r\n\r\n`;\r\n\r\n\r\n\r\nexport default function DetailsCard({ title, subheader }){\r\n  const { total, chartData } = useTransactions(title);\r\n  const classes = useStyles();\r\n  const x = useMotionValue(0);\r\n  const y = useMotionValue(0);\r\n  const rotateX = useTransform(y, [-100, 100], [30, -30]);\r\n  const rotateY = useTransform(x, [-100, 100], [-30, 30]);\r\n\r\n  return (\r\n\r\n   \r\n    <Dnute\r\n        style={{ x, y, rotateX, rotateY, z: 100000 }}\r\n        drag\r\n        dragElastic={0.12}\r\n        whileTap={{ cursor: \"grabbing\" }}\r\n        >\r\n    <Card data-aos=\"fade-down\" className={title === 'Income' ? classes.income : classes.expense}>\r\n     \r\n    <CardContainer\r\n    style={{ x, y, rotateX, rotateY, z: 100 }}\r\n    drag\r\n    dragElastic={0.16}\r\n    dragConstraints={{ top: 0, left: 0, right: 0, bottom: 0 }}\r\n    whileTap={{ cursor: \"grabbing\" }}\r\n    >\r\n      <CardHeader title={title} subheader={subheader} />\r\n      <CardContent>\r\n        <Typography variant=\"h5\">₹{total}</Typography>\r\n        <Doughnut data={chartData} />  \r\n      </CardContent> \r\n      </CardContainer>\r\n      \r\n    </Card>\r\n    </Dnute>\r\n  \r\n  );\r\n};\r\n\r\n/*<Dnute\r\n        style={{ x, y, rotateX, rotateY, z: 100000 }}\r\n        drag\r\n        dragElastic={0.12}\r\n        whileTap={{ cursor: \"grabbing\" }}\r\n        ></Dnute>*/","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\useTransactions.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Main\\styles.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Main\\Form\\Form.jsx",["186","187"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem, CardActionArea } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Aos from 'aos';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Aos.init({duration: 2000});\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid data-aos=\"fade-right\" container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\constants\\categories.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Main\\List\\styles.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Snackbar\\styles.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\utils\\formatDate.js",["188"],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\index.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\App.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\components\\Details\\styles.js",[],"C:\\Users\\Ashutoshprashun\\Desktop\\microsoft\\speechly_expense_tracker_project-main\\src\\Front.js",[],{"ruleId":"189","severity":1,"message":"190","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"193","line":1,"column":27,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"194","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":26},{"ruleId":"195","severity":1,"message":"196","line":78,"column":6,"nodeType":"197","endLine":78,"endColumn":15,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":1,"column":1,"nodeType":"201","endLine":11,"endColumn":3},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"189","severity":1,"message":"190","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"193","line":1,"column":27,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"194","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":26},{"ruleId":"189","severity":1,"message":"206","line":2,"column":61,"nodeType":"191","messageId":"192","endLine":2,"endColumn":75},{"ruleId":"189","severity":1,"message":"207","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":11},{"ruleId":"189","severity":1,"message":"206","line":2,"column":90,"nodeType":"191","messageId":"192","endLine":2,"endColumn":104},{"ruleId":"195","severity":1,"message":"196","line":79,"column":6,"nodeType":"197","endLine":79,"endColumn":15,"suggestions":"208"},{"ruleId":"199","severity":1,"message":"200","line":1,"column":1,"nodeType":"201","endLine":11,"endColumn":3},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSpeechContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["209"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["210"],"no-negated-in-lhs",["211"],"'CardActionArea' is defined but never used.","'Aos' is defined but never used.",["212"],{"desc":"213","fix":"214"},"no-global-assign","no-unsafe-negation",{"desc":"213","fix":"215"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"216","text":"217"},{"range":"218","text":"217"},[3006,3015],"[createTransaction, formData, segment]",[3077,3086]]